proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=appcache:32m max_size=1g;

upstream app-read {
    server backend:8080  weight=2;
    server backend2:8080 weight=1;
    server backend3:8080 weight=1;
}

upstream app-write {
    server backend:8080;
}

upstream app-mirror {
    server backend-mirror:8080;
}

map $request_method $upstream_location {
    GET app-read;
    default app-write;
}

server {
    listen 80;
    more_clear_headers Server;
    more_set_headers 'Server: termy';

    gzip on;
    gzip_disable "msie6";
	gzip_types text/plain text/css application/json application/x-javascript text/javascript image/png;
	gzip_min_length 256;

    proxy_cache appcache;
    proxy_cache_methods GET;
    proxy_cache_lock on;
    proxy_cache_valid 200 302 10m;
    proxy_cache_valid 404 1m;

    location / {
        root /static/;
        proxy_set_header    Host              $host;
        proxy_set_header    X-Real-IP         $remote_addr;
        proxy_set_header    X-Forwarded-for   $remote_addr;
        include /etc/nginx/mime.types;
        try_files $uri $uri/ /index.html;
    }

    location = /documentation {
		return 301 $scheme://$http_host/documentation/readme.md;
    }

    location = /__md_file {
        internal;
        allow all;
        add_header 'Vary' 'Accept';
        default_type text/html;
        alias /md/md-renderer.html;
    }

    location = /md/md-renderer.html {
        deny all;
    }

    location ~* \.md {
       error_page 418 = /__md_file;
       add_header 'Vary' 'Accept';
       if (!-f $request_filename) {
            break;
       }
       if ($http_accept !~* "text/markdown") {
          return 418;
       }
    }

    location ~ /documentation/(.+)\.(png|svg)$ {
        root /etc/nginx/html;
    }

    location /test {
		return 301 $scheme://$http_host/;
    }

    location /api/v1/ {
        proxy_no_cache 1;
        proxy_pass http://$upstream_location;
        proxy_set_header Host $host;
    }

    location ~ /api/v1/(.+)\.(css|js|json)$ {
        proxy_pass http://$upstream_location/swagger/$1.$2;
        proxy_set_header Host $host;
    }

    location = /api/v1/ {
        proxy_pass http://$upstream_location/swagger/index.html;
        proxy_set_header Host $host;
    }

    location /mirror1/ {
        proxy_pass http://app-mirror/;
        proxy_set_header Host $host;
    }

#     location /mirror1/api/v1/ {
#         proxy_pass http://app-mirror;
#         proxy_set_header Host $host;
#     }

    location ~ /mirror1/api/v1/(.+)\.(css|js|json)$ {
        proxy_pass http://app-mirror/swagger/$1.$2;
        proxy_set_header Host $host;
    }

    location = /mirror1/api/v1/ {
        proxy_pass http://app-mirror/swagger/index.html;
        proxy_set_header Host $host;
    }

    location /admin {
        proxy_set_header X-Script-Name /admin;
        proxy_set_header X-Scheme $scheme;
        proxy_set_header Host $host;
        proxy_pass http://pgadmin:80/;
        proxy_redirect off;
    }

    location = /status {
        stub_status;
    }
}
